name: Deploy Spring Boot Application

on:
  push:
    branches: [ "main", "stage" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build -x test

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: futsal-jar
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: futsal-jar

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Create remote directory and copy JAR files
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "mkdir -p ~/app"
          scp *.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/app

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          echo "MYSQL_URL=${{ secrets.MYSQL_URL }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "MYSQL_PORT=${{ secrets.MYSQL_PORT }}" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "HOST_PRIVATE_IP=${{ secrets.HOST_PRIVATE_IP }}" >> .env
          echo "SERVER_NAME=${{ secrets.SERVER_NAME }}" >> .env
          echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
          echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
          echo "FIREBASE_CREDENTIALS_PATH=${{ secrets.FIREBASE_CREDENTIALS_PATH }}" >> .env
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> .env
          echo "NCP_ACCESS_KEY=${{ secrets.NCP_ACCESS_KEY }}" >> .env
          echo "NCP_SECRET_KEY=${{ secrets.NCP_SECRET_KEY }}" >> .env
          echo "NCP_BUCKET=${{ secrets.NCP_BUCKET }}" >> .env
          
          

      - name: Copy Docker Compose and configurations
        run: |
          ls
          scp -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/
          scp -o StrictHostKeyChecking=no -r ./initdb ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/initdb
          scp -o StrictHostKeyChecking=no -r ./nginx ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/nginx
          scp -o StrictHostKeyChecking=no ./.env ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/.env

      - name: Run Docker Compose (MySQL, Redis)
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
          cd ~
          docker compose down && docker compose up -d
          "

      - name: Create firebaseKey.json on server
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: firebaseKey.json
          json: ${{ secrets.FIREBASE_KEY_JSON }}

      - name: Upload firebaseKey.json to server
        run: |
          scp -o StrictHostKeyChecking=no firebaseKey.json ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.FIREBASE_CREDENTIALS_PATH }}

      - name: Restart application
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "
            if ! type java > /dev/null 2>&1; then
              sudo apt-get install -y openjdk-17-jre-headless
            fi
            export $(cat ~/.env | xargs) &&
            sudo fuser -k 8080/tcp || true; \
            sudo chmod 644 ${{ secrets.FIREBASE_CREDENTIALS_PATH }}; \
            sudo nohup java -Duser.timezone="Asia/Seoul" \
            -jar ~/app/futsal-application.jar  \
            --spring.profiles.active=${{ secrets.SPRING_PROFILE_ACTIVE }} \
            --spring.datasource.password=${{ secrets.MYSQL_PASSWORD }} > ~/app/deploy.log 2>&1 &
        
            sleep 5
            echo '✅ MYSQL_HOST='$MYSQL_HOST >> ~/app/deploy.log
            echo '✅ MYSQL_PORT='$MYSQL_PORT >> ~/app/deploy.log
            echo '✅ REDIS_HOST='$REDIS_HOST >> ~/app/deploy.log
          "

